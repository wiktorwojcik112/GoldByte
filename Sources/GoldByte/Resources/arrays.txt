struct Array {
	var NUMBER maxIndex 0
	var STRING name "undefined"

	func init(name:STRING,count:NUMBER):VOID {
		if # count < 1 # {
			throw "Count must be at least 1."
		}

		set $self::maxIndex |count - 1|
		set $self::name name
	}

	func insert(value:ANY,index:NUMBER):VOID {
		var NUMBER maxIndex 0
		set $maxIndex self::maxIndex

		if # -1 < index && maxIndex < index # {
			throw "Index out of range."
		}

		enable "dyn_var_make"
		enable "dyn_var_read"

		var STRING arrayCell "%(self::name) %(index)"
		dyn_var_make STRING arrayCell value

		disable "dyn_var_make"
		disable "dyn_var_read"
	}

	func read(index:NUMBER):STRING {
		var NUMBER maxIndex 0
		set $maxIndex self::maxIndex

		if # -1 < index && maxIndex < index # {
			throw "Index out of range."
		}

		enable "dyn_var_make"
		enable "dyn_var_read"

		var STRING arrayCell "%(self::name) %(index)"
		var STRING result ""
		dyn_var_read STRING arrayCell $result

		disable "dyn_var_make"
		disable "dyn_var_read"

		return result
	}
}

